
-->Create instance with default settings and connect with cli mode with the help of ssh.

Step-1:- If you are using a new centos or ubuntu instance. Update the system.

-> For CentOS or Red Hat
     *yum update all

-> For Ubuntu
      * apt-get update

Step-2:- Install the dependencies.

-> In CentOS or Red Hat
--------------------------------
    *sudo yum install automake fuse fuse-devel gcc-c++ git libcurl-devel libxml2-devel make openssl-devel

->In Ubuntu or Debian
-------------------------------
    *sudo apt-get install automake autotools-dev fuse g++ git libcurl4-gnutls-dev libfuse-dev libssl-dev libxml2-dev make pkg-config

Step-3:- Clone s3fs source code from git.
    *git clone https://github.com/s3fs-fuse/s3fs-fuse.git

Step-4:- Now change to source code  directory, and compile and install the code with the following commands:
   *cd s3fs-fuse
   *./autogen.sh
   *./configure --prefix=/usr --with-openssl 

Step-5:- Use below command to check where s3fs command is placed in O.S. It will also tell you the installation is ok.
  *which s3fs

Step-6:- Getting the access key and secret key.

 =>You will need AWS Access key and Secret key with appropriate permissions in order to access your s3 bucket from your EC2 instance.
     You can easily manage your user permissions from IAM (Identity and Access Management) Service provided by AWS. 
     Create an IAM user with S3 full access(or with a role with sufficient permissions) or use root credentials of your Account. 
     Here we will use the root credentials for simplicity.


Step-7 :- Create a new file in /etc with the name passwd-s3fs and Paste the access key and secret key in the below format .
    *touch /etc/passwd-s3fs
    *vim /etc/passwd-s3fs

    *Your_accesskey:Your_secretkey

Step-8:- Change the permission of file
    *sudo chmod 640 /etc/passwd-s3fs

Step-9:- Now create a directory or provide the path of an existing directory and mount S3bucket in it.

    *mkdir /mys3bucket
    *s3fs your_bucketname -o use_cache=/tmp -o allow_other -o uid=1001 -o mp_umask=002 -o multireq_max=5 /mys3bucket

Step-10:- Check mounted s3 bucket. Output will be similar as shown below but Used size may differ.
  *df -Th
   “or”
  *df -Th /mys3bucket
 
If it shows the mounted file system, you have successfully mounted the S3 bucket on your EC2 Instance. You can also test it further by creating a test file.

  * cd /mys3bucket
  * echo "this is a test file to check s3fs" >> test.txt
  *ls
 
This change should also reflect on S3 bucket. So Login to your S3 bucket to verify if the test file is present or not.













